{"version":3,"file":"static/js/477.fa8f20fd.chunk.js","mappings":"gRACA,EAAmC,uCAAnC,EAAuF,iCAAvF,EAAuI,mCAAvI,EAAwL,kCAAxL,EAA4O,sCAA5O,EAAkS,oCAAlS,EAA4V,0CAA5V,EAA0Z,wCAA1Z,EAAgd,kCAAhd,EAAigB,mCAAjgB,EAA8iB,8BAA9iB,EAAslB,8BCAtlB,GAAgB,cAAgB,4BAA4B,SAAW,uBAAuB,QAAU,sBAAsB,SAAW,uBAAuB,SAAW,wB,SCQ9JA,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA4BL,EAAAA,EAAAA,UAASM,EAAAA,EAAAA,MAAcC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA5CG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAgBxB,OAdAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAES,OAFTF,EAAAC,KAAA,EAEnBT,EAAUH,EAAAA,EAAAA,SAAkBW,EAAAE,KAAA,GACAC,EAAAA,EAAAA,IAAiBvB,GAAS,KAAD,EAA/CmB,EAAaC,EAAAI,KACnBjB,EAAcY,GACdP,EAAUH,EAAAA,EAAAA,SAAkBW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE5BR,EAAUH,EAAAA,EAAAA,OAAgB,yBAAAW,EAAAM,OAAA,GAAAR,EAAA,kBAE7B,kBATmB,OAAAH,EAAAY,MAAA,KAAAC,UAAA,KAWpBd,GACF,GAAG,CAACd,KAEF6B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,cAAkBC,SAAA,CAC/BrB,IAAWF,EAAAA,EAAAA,UAAoBwB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACtCC,MAAMC,QAAQ9B,IACbA,EAAW+B,KAAI,SAAAC,GAAK,OAClBL,EAAAA,EAAAA,KAAA,MAAmBH,UAAWC,EAAAA,SAAaC,UACzCH,EAAAA,EAAAA,MAAA,MAAKC,UAAWC,EAAAA,SAAaC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OACEM,IAAG,sCAAAC,OAAwCF,EAAMG,cACjDC,IAAKJ,EAAMK,KACXb,UAAWC,EAAAA,WAEbE,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,SAAaC,SAAEM,EAAMK,QACnCd,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAAA,SAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAAA,SAAaC,SAAC,gBAAmB,IACjDM,EAAMM,iBAVJN,EAAMO,GAaV,MAIf,ECjDA,GAAgB,iBAAmB,kCAAkC,YAAc,6BAA6B,cAAgB,+BAA+B,eAAiB,gCAAgC,iBAAmB,mCCQtNC,EAAU,WACrB,IAAQ9C,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/C6C,EAAa3C,EAAA,GAAE4C,EAAgB5C,EAAA,GACtCI,GAA4BL,EAAAA,EAAAA,UAASM,EAAAA,EAAAA,MAAcC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA5CG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAiBxB,OAfAG,EAAAA,EAAAA,YAAU,WACR,IAAMoC,EAAiB,eAAAlC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAgC,EAAA,OAAAjC,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEM,OAFNF,EAAAC,KAAA,EAEtBT,EAAUH,EAAAA,EAAAA,SAAkBW,EAAAE,KAAA,GACG6B,EAAAA,EAAAA,IAAoBnD,GAAS,KAAD,EAArDkD,EAAgB9B,EAAAI,KACtBwB,EAAiBE,GACjBtC,EAAUH,EAAAA,EAAAA,SAAkBW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE5BR,EAAUH,EAAAA,EAAAA,OAAgB,yBAAAW,EAAAM,OAAA,GAAAR,EAAA,kBAE7B,kBATsB,OAAAH,EAAAY,MAAA,KAAAC,UAAA,KAWvBqB,GACF,GAAG,CAACjD,KAGF6B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,iBAAqBC,SAAA,CACpCrB,IAAWF,EAAAA,EAAAA,UAAoBwB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACtCvB,IAAWF,EAAAA,EAAAA,SAAoB0B,MAAMC,QAAQW,IAAkBA,EAAcK,OAAS,EACrFL,EAAcV,KAAI,SAAAC,GAAK,OACrBL,EAAAA,EAAAA,KAAA,MAAmBH,UAAWC,EAAAA,YAAgBC,UAC5CH,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAAA,YAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,cAAkBC,SAAEM,EAAMe,UACxCpB,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,eAAmBC,SAAEM,EAAMgB,cAHpChB,EAAMO,GAKV,IAGPlC,IAAWF,EAAAA,EAAAA,UAAoBwB,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,iBAAqBC,SAAC,0CAIzE,EC3CauB,EAAmB,SAAHxC,GAAwB,IAAnByC,EAAYzC,EAAZyC,aAChC,OACE3B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OACEM,IAAG,sCAAAC,OAAwCgB,EAAaC,eACxDf,IAAKc,EAAaE,MAClB5B,UAAWC,KAEbF,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAiBC,SAAA,CAC7BwB,EAAaE,MAAM,KACnB,IAAIC,KAAKH,EAAaI,cAAcC,cAAc,QAErDhC,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAgBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAgBC,SAAC,gBACjCwB,EAAaM,iBAEhB7B,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAoBC,SAAC,cACnCC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAwBC,SAAEwB,EAAaO,YACrD9B,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAkBC,SAAC,YACjCC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAsBC,SACjCwB,EAAaQ,OAAO3B,KAAI,SAAA4B,GAAK,OAAIA,EAAMtB,IAAI,IAAEuB,KAAK,UAI3D,ECnBaC,EAAe,SAAHpD,GAA0B,IAApByC,EAAYzC,EAAZyC,aAC7B,OACE3B,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACsB,EAAgB,CAACC,aAAcA,KAChC3B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAYC,SAAC,4BAC3BC,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACC,GAAG,OAAOvC,UAAWC,EAAYC,SAAC,UACxCC,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACC,GAAG,UAAUvC,UAAWC,EAAYC,SAAC,aACzCH,EAAAA,EAAAA,MAACyC,EAAAA,GAAM,CAAAtC,SAAA,EACLC,EAAAA,EAAAA,KAACsC,EAAAA,GAAK,CAACC,KAAK,OAAOC,SAASxC,EAAAA,EAAAA,KAAClC,EAAI,OACjCkC,EAAAA,EAAAA,KAACsC,EAAAA,GAAK,CAACC,KAAK,UAAUC,SAASxC,EAAAA,EAAAA,KAACa,EAAO,cAKnD,ECkBA,EAhCyB,WAAO,IAAD4B,EAAAC,EACrB3E,GAAYC,EAAAA,EAAAA,MAAZD,QACF4E,GAAWC,EAAAA,EAAAA,MACjB3E,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CsD,EAAYpD,EAAA,GAAE0E,EAAe1E,EAAA,GACpCI,GAA4BL,EAAAA,EAAAA,UAASM,EAAAA,EAAAA,MAAcC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA5CG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBqE,GAAcC,EAAAA,EAAAA,QAA2B,QAArBN,EAAe,QAAfC,EAACC,EAASK,aAAK,IAAAN,OAAA,EAAdA,EAAgBO,YAAI,IAAAR,EAAAA,EAAI,KAgBnD,OAdA7D,EAAAA,EAAAA,YAAU,WACR,IAAMsE,EAAiB,eAAApE,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAkE,EAAA,OAAAnE,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEM,OAFNF,EAAAC,KAAA,EAEtBT,EAAUH,EAAAA,EAAAA,SAAkBW,EAAAE,KAAA,GACJ+D,EAAAA,EAAAA,IAAwBrF,GAAS,KAAD,EAAlDoF,EAAShE,EAAAI,KACfsD,EAAgBM,GAChBxE,EAAUH,EAAAA,EAAAA,SAAkBW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE5BR,EAAUH,EAAAA,EAAAA,OAAgB,yBAAAW,EAAAM,OAAA,GAAAR,EAAA,kBAE7B,kBATsB,OAAAH,EAAAY,MAAA,KAAAC,UAAA,KAWvBuD,GACF,GAAG,CAACnF,KAEF6B,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACC,GAAIU,EAAYO,QAAQtD,SAAC,YAC9BrB,IAAWF,EAAAA,EAAAA,UAAoBwB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACtCvB,IAAWF,EAAAA,EAAAA,UACVwB,EAAAA,EAAAA,KAACkC,EAAY,CAACX,aAAcA,MAIpC,C,+LCrCO,SAAe+B,IAAe,OAAAC,EAAA7D,MAAC,KAADC,UAAA,CAMpC,SAAA4D,IAAA,OAAAA,GAAAxE,EAAAA,EAAAA,GAAAC,IAAAA,MANM,SAAAwE,IAAA,IAAAC,EAAA,OAAAzE,IAAAA,MAAA,SAAA0E,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,OAEyC,MAD7B,kDACL,mCAAkCqE,EAAArE,KAAA,EAEvBsE,EAAAA,EAAAA,IAAU,GAADpD,OAHf,kDAG2B,aAAAA,OAFhC,mCAE+C,oBAAmB,KAAD,EAA/D,OAARkD,EAAQC,EAAAnE,KAAAmE,EAAAE,OAAA,SACPH,EAASI,MAAI,wBAAAH,EAAAjE,OAAA,GAAA+D,EAAA,MACrB9D,MAAA,KAAAC,UAAA,CAEM,IAAMyD,EAAuB,eAAAtE,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMlB,GAAO,IAAA0F,EAAA,OAAAzE,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEJ,MAD7B,sCACL,mCAAkCF,EAAAE,KAAA,EAEvBsE,EAAAA,EAAAA,IAAU,GAADpD,OAHf,uCAG2BA,OAAGxC,EAAO,aAAAwC,OAF1C,mCAEyD,oBAAmB,KAAD,EAAzE,OAARkD,EAAQtE,EAAAI,KAAAJ,EAAAyE,OAAA,SACPH,EAASI,MAAI,wBAAA1E,EAAAM,OAAA,GAAAR,EAAA,KACrB,gBANmC6E,GAAA,OAAAhF,EAAAY,MAAA,KAAAC,UAAA,KAQvBL,EAAgB,eAAAyE,GAAAhF,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgF,EAAMjG,GAAO,IAAA0F,EAAA,OAAAzE,IAAAA,MAAA,SAAAiF,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,OAEG,MAD7B,sCACL,mCAAkC4E,EAAA5E,KAAA,EAEvBsE,EAAAA,EAAAA,IAAU,GAADpD,OAHf,uCAIJA,OAAGxC,EAAO,qBAAAwC,OAHX,mCAGkC,oBAC5C,KAAD,EAFa,OAARkD,EAAQQ,EAAA1E,KAAA0E,EAAAL,OAAA,SAGPH,EAASI,KAAKK,MAAI,wBAAAD,EAAAxE,OAAA,GAAAuE,EAAA,KAC1B,gBAR4BG,GAAA,OAAAJ,EAAArE,MAAA,KAAAC,UAAA,KAUhBuB,EAAmB,eAAAkD,GAAArF,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqF,EAAMtG,GAAO,IAAA0F,EAAA,OAAAzE,IAAAA,MAAA,SAAAsF,GAAA,cAAAA,EAAAlF,KAAAkF,EAAAjF,MAAA,OAEA,MAD7B,sCACL,mCAAkCiF,EAAAjF,KAAA,EAEvBsE,EAAAA,EAAAA,IAAU,GAADpD,OAHf,uCAIJA,OAAGxC,EAAO,qBAAAwC,OAHX,mCAGkC,2BAC5C,KAAD,EAFa,OAARkD,EAAQa,EAAA/E,KAAA+E,EAAAV,OAAA,SAGPH,EAASI,KAAKU,SAAO,wBAAAD,EAAA7E,OAAA,GAAA4E,EAAA,KAC7B,gBAR+BG,GAAA,OAAAJ,EAAA1E,MAAA,KAAAC,UAAA,KAUnB8E,EAAmB,eAAAC,GAAA3F,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA2F,EAAMC,GAAW,IAAAnB,EAAA,OAAAzE,IAAAA,MAAA,SAAA6F,GAAA,cAAAA,EAAAzF,KAAAyF,EAAAxF,MAAA,OAEJ,MAD7B,4CACL,mCAAkCwF,EAAAxF,KAAA,EAEvBsE,EAAAA,EAAAA,IAAU,GAADpD,OAHf,4CAIJ,aAAAA,OAHD,mCAGgB,WAAAA,OAAUqE,EAAW,+CAC/C,KAAD,EAFa,OAARnB,EAAQoB,EAAAtF,KAAAsF,EAAAjB,OAAA,SAGPH,EAASI,KAAKU,SAAO,wBAAAM,EAAApF,OAAA,GAAAkF,EAAA,KAC7B,gBAR+BG,GAAA,OAAAJ,EAAAhF,MAAA,KAAAC,UAAA,I,sDCtCzB,IAAMnB,EAAW,CACpBuG,KAAM,OACNC,QAAS,UACTC,QAAS,UACTC,MAAO,Q","sources":["webpack://react-homework-template/./src/components/ModieDetails/MovieDetails.module.css?ecc5","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","components/MovieDetailsItem/MovieDetailsItem.jsx","components/ModieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx","services/api.js","services/constants.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"detailsContainer\":\"MovieDetails_detailsContainer__HYV4t\",\"detailsImg\":\"MovieDetails_detailsImg__1oqjX\",\"detailsTitle\":\"MovieDetails_detailsTitle__ZEoLM\",\"detailsVote\":\"MovieDetails_detailsVote__n8MlJ\",\"detailsOverview\":\"MovieDetails_detailsOverview__jSHdQ\",\"detailsGenres\":\"MovieDetails_detailsGenres__veqw5\",\"detailsOverViewText\":\"MovieDetails_detailsOverViewText__9LDeh\",\"detailsGenresText\":\"MovieDetails_detailsGenresText__oVS4A\",\"detailsSpan\":\"MovieDetails_detailsSpan__R5QnH\",\"addContainer\":\"MovieDetails_addContainer__AsdIS\",\"addText\":\"MovieDetails_addText__KVMDO\",\"addLink\":\"MovieDetails_addLink__dzRP5\",\"routesContainer\":\"MovieDetails_routesContainer__BZ1LY\"};","// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castImg\":\"Cast_castImg__T4WbF\",\"castText\":\"Cast_castText__P--Rp\",\"castSpan\":\"Cast_castSpan__KdGUt\"};","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport css from './Cast.module.css';\n\nimport { requestMovieCast } from 'services/api';\nimport { STATUSES } from 'services/constants';\nimport { Loader } from '../Loader/Loader';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [moviesCast, setMoviesCast] = useState([]);\n  const [status, setStatus] = useState(STATUSES.idle);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        setStatus(STATUSES.pending);\n        const movieDataCast = await requestMovieCast(movieId);\n        setMoviesCast(movieDataCast);\n        setStatus(STATUSES.success);\n      } catch (error) {\n        setStatus(STATUSES.error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n  return (\n    <div className={css.castContainer}>\n      {status === STATUSES.pending && <Loader />}\n      {Array.isArray(moviesCast) &&\n        moviesCast.map(movie => (\n          <ul key={movie.id} className={css.castList}>\n            <li  className={css.castItem}>\n              <img\n                src={`https://image.tmdb.org/t/p/original${movie.profile_path}`}\n                alt={movie.name}\n                className={css.castImg}\n              />\n              <p className={css.castText}>{movie.name}</p>\n              <p className={css.castText}>\n                <span className={css.castSpan}>Character: </span>{' '}\n                {movie.character}\n              </p>\n            </li>\n          </ul>\n        ))}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__bHfUv\",\"reviewsItem\":\"Reviews_reviewsItem__Su53A\",\"reviewsAuthor\":\"Reviews_reviewsAuthor__vf7dl\",\"reviewsContent\":\"Reviews_reviewsContent__uAAxd\",\"noReviewsMessage\":\"Reviews_noReviewsMessage__jL7xa\"};","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport css from './Reviews.module.css';\n\nimport { requestMovieReviews } from 'services/api';\nimport { STATUSES } from 'services/constants';\nimport { Loader } from '../Loader/Loader';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [moviesReviews, setMoviesReviews] = useState([]);\n  const [status, setStatus] = useState(STATUSES.idle);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        setStatus(STATUSES.pending);\n        const movieDataReviews = await requestMovieReviews(movieId);\n        setMoviesReviews(movieDataReviews);\n        setStatus(STATUSES.success);\n      } catch (error) {\n        setStatus(STATUSES.error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div className={css.reviewsContainer}>\n    {status === STATUSES.pending && <Loader />}\n    {status === STATUSES.success && Array.isArray(moviesReviews) && moviesReviews.length > 0 ? (\n      moviesReviews.map(movie => (\n        <ul key={movie.id} className={css.reviewsList}>\n          <li className={css.reviewsItem}>\n            <p className={css.reviewsAuthor}>{movie.author}</p>\n            <p className={css.reviewsContent}>{movie.content}</p>\n          </li>\n        </ul>\n      ))\n    ) : (\n      status === STATUSES.success && <p className={css.noReviewsMessage}>No reviews available for this movie</p>\n    )}\n  </div>\n  );\n};\n","import React from 'react'\nimport css from '../ModieDetails/MovieDetails.module.css'\n\nexport const MovieDetailsItem = ({movieDetails}) => {\n  return (\n    <div className={css.detailsContainer}>\n      <img\n        src={`https://image.tmdb.org/t/p/original${movieDetails.backdrop_path}`}\n        alt={movieDetails.title}\n        className={css.detailsImg}\n      />\n      <h3 className={css.detailsTitle}>\n        {movieDetails.title} (\n        {new Date(movieDetails.release_date).getFullYear()})\n      </h3>\n      <p className={css.detailsVote}>\n        <span className={css.detailsSpan}>User vote: </span>\n        {movieDetails.vote_average}\n      </p>\n      <p className={css.detailsOverview}>Overview</p>\n      <p className={css.detailsOverViewText}>{movieDetails.overview}</p>\n      <p className={css.detailsGenres}>Genres</p>\n      <p className={css.detailsGenresText}>\n        {movieDetails.genres.map(genre => genre.name).join(', ')}\n      </p>\n      </div>\n  )\n}\n","import React from 'react';\nimport css from './MovieDetails.module.css';\nimport { Link, Routes, Route } from 'react-router-dom';\n\nimport { Cast } from '../Cast/Cast';\nimport { Reviews } from '../Reviews/Reviews';\nimport { MovieDetailsItem } from 'components/MovieDetailsItem/MovieDetailsItem';\n\nexport const MovieDetails = ({ movieDetails }) => {\n  return (\n    <div>\n      <MovieDetailsItem movieDetails={movieDetails} />\n      <div className={css.addContainer}>\n        <p className={css.addText}>Additional information</p>\n        <Link to=\"cast\" className={css.addLink}>Cast</Link>\n        <Link to=\"reviews\" className={css.addLink}>Reviews</Link>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Reviews />} />\n          </Routes>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\n\nimport { requestMovieDetailsById } from '..//services/api';\nimport { STATUSES } from '../services/constants';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieDetails } from 'components/ModieDetails/MovieDetails';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [status, setStatus] = useState(STATUSES.idle); // \"idle\" | \"pending\" | \"success\" | \"error\"\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setStatus(STATUSES.pending);\n        const movieData = await requestMovieDetailsById(movieId);\n        setMovieDetails(movieData);\n        setStatus(STATUSES.success);\n      } catch (error) {\n        setStatus(STATUSES.error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n  return (\n    <div>\n      <Link to={backLinkRef.current}>Go back</Link>\n      {status === STATUSES.pending && <Loader />}\n      {status === STATUSES.success && (\n        <MovieDetails movieDetails={movieDetails} />\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nexport async function requestTrending() {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const KEY = 'd425559355e0879fed139185dbbb845a';\n\n  const response = await axios.get(`${BASE_URL}?api_key=${KEY}&language=en-US`);\n  return response.data;\n}\n\nexport const requestMovieDetailsById = async movieId => {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const KEY = 'd425559355e0879fed139185dbbb845a';\n\n  const response = await axios.get(`${BASE_URL}${movieId}?api_key=${KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const KEY = 'd425559355e0879fed139185dbbb845a';\n\n  const response = await axios.get(\n    `${BASE_URL}${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  const KEY = 'd425559355e0879fed139185dbbb845a';\n\n  const response = await axios.get(\n    `${BASE_URL}${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const requestMovieByQuery = async SearchValue => {\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  const KEY = 'd425559355e0879fed139185dbbb845a';\n\n  const response = await axios.get(\n    `${BASE_URL}?api_key=${KEY}&query=${SearchValue}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","export const STATUSES = {\n    idle: 'idle',  \n    pending: 'pending',\n    success: 'success',\n    error: 'error',\n}"],"names":["Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","moviesCast","setMoviesCast","_useState3","STATUSES","_useState4","status","setStatus","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieDataCast","_context","prev","next","requestMovieCast","sent","t0","stop","apply","arguments","_jsxs","className","css","children","_jsx","Loader","Array","isArray","map","movie","src","concat","profile_path","alt","name","character","id","Reviews","moviesReviews","setMoviesReviews","fetchMovieReviews","movieDataReviews","requestMovieReviews","length","author","content","MovieDetailsItem","movieDetails","backdrop_path","title","Date","release_date","getFullYear","vote_average","overview","genres","genre","join","MovieDetails","Link","to","Routes","Route","path","element","_location$state$from","_location$state","location","useLocation","setMovieDetails","backLinkRef","useRef","state","from","fetchMovieDetails","movieData","requestMovieDetailsById","current","requestTrending","_requestTrending","_callee5","response","_context5","axios","abrupt","data","_x","_ref2","_callee2","_context2","cast","_x2","_ref3","_callee3","_context3","results","_x3","requestMovieByQuery","_ref4","_callee4","SearchValue","_context4","_x4","idle","pending","success","error"],"sourceRoot":""}